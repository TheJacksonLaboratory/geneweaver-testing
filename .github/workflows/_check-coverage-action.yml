name: 'Test Coverage Definition'
on:
  workflow_call:
    inputs:
      coverage-module:
        description: "Module to test coverage for"
        type: string
        required: true
      python-version:
        description: Python version to set up'
        default: '3.11'
        type: string
      runner-os:
        description: 'Runner OS'
        default: 'ubuntu-latest'
        type: string
      upload-coverage:
        description: 'Upload coverage results'
        default: true
        type: boolean
      required-coverage:
        description: 'Required coverage percentage'
        default: 100
        type: string
      show-test-traceback:
        description: "Show traceback for failed tests"
        type: string
        default: "no"
jobs:
  run-tests:
    runs-on: ${{ inputs.runner-os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "/Users/runner/.local/bin:$PATH" >> $GITHUB_PATH
          fi
      - name: Configure Poetry
        run: poetry config virtualenvs.create false
      - name: Install dependencies with Poetry
        run: poetry install
      - name: Test with pytest
        run: |
          poetry run pytest tests \
          --tb=${{ inputs.show-test-traceback }} \
          --cov=${{ inputs.coverage-module }} \
          --cov-report=term \
          --cov-report=html \
          --cov-fail-under=${{ inputs.required-coverage }} > coverage_report.txt
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage_report.txt
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-html
          path: htmlcov
      - name: Upload coverage to Compass
        run: |
          METRIC_VALUE=$(cat coverage_report.txt | grep 'Total coverage:' | awk '{print $NF}' | sed 's/%//')
          curl --request POST \
          --url https://jacksonlaboratory.atlassian.net/gateway/api/compass/v1/metrics \
          --user "${{ vars.ATLASSIAN_COMPASS_EMAIL }}:${{ secrets.ATLASSIAN_COMPASS_KEY }}" \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --data "{
            \"metricSourceId\": \"ari:cloud:compass:44257862-6c68-4d47-8211-da38d2bb001b:metric-source/90bb0329-f6c5-429a-abbc-8d174535ad21/281f291c-0b2d-41f5-a2ff-7e45f46cb07d\",
            \"value\": $METRIC_VALUE,
            \"timestamp\": \"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"
          }"
      - name: Upload complexity to Compass
        run: |
          METRIC_VALUE=$(poetry run radon cc src --total-average | grep 'Average complexity:' | awk '{print $NF}' | sed 's/[\(\)]//g')
          curl --request POST \
          --url https://jacksonlaboratory.atlassian.net/gateway/api/compass/v1/metrics \
          --user "${{ vars.ATLASSIAN_COMPASS_EMAIL }}:${{ secrets.ATLASSIAN_COMPASS_KEY }}" \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --data "{
            \"metricSourceId\": \"ari:cloud:compass:44257862-6c68-4d47-8211-da38d2bb001b:metric-source/90bb0329-f6c5-429a-abbc-8d174535ad21/bb8e9f1a-718e-4cd9-a4b5-9da8f3df71c0\",
            \"value\": $METRIC_VALUE,
            \"timestamp\": \"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"
          }"
